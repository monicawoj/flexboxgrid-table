/*setting font styles*/
@mixin font($font: $font, $color: $black,$weight: 400, $size: 17px, $transform: none) {
  font-family: $font;
  color: $color;
  font-weight: $weight;
  font-size: $size;
  text-transform: $transform;
}

/* @include transition(all,2s,ease-out); */
@mixin transition($what: all, $time: 0.2s, $how: ease-in-out) {
  -webkit-transition: $what $time $how;
  -moz-transition:    $what $time $how;
  -ms-transition:     $what $time $how;
  -o-transition:      $what $time $how;
  transition:         $what $time $how;
}

/*Breakpoint mixin for media queries*/
@mixin screen($size) {
  @if $size == sm {
    @media (max-width: $sm) { @content ; }
  }
  @else if $size == med {
    @media (max-width: $med) { @content ; }
  }
  @else if $size == lg {
    @media (max-width: $lg) { @content ; }
  }
}

/*Retina images fallback*/
@mixin image-fallback($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

/*Padding mixin*/
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}
/*Margin mixin (use null where needed)*/
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

/*Border radius for diff browsers*/
@mixin border-radius($topLeft, $topRight, $bottomRight, $bottomLeft) {
  -moz-border-radius-bottomleft: $bottomLeft;
  -moz-border-radius-bottomright: $bottomRight;
  -moz-border-radius-topright: $topRight;
  -moz-border-radius-topleft: $topLeft;

  -webkit-border-bottom-left-radius: $bottomLeft;
  -webkit-border-bottom-right-radius: $bottomRight;
  -webkit-border-top-left-radius: $topLeft;
  -webkit-border-top-right-radius: $topRight;

  border-bottom-right-radius: $bottomRight;
  border-bottom-left-radius: $bottomLeft;
  border-top-right-radius: $topRight;
  border-top-left-radius: $topLeft;
}

/*Display flex mixin*/
@mixin flex($direction:row,$justify:center,$align:center,$wrap:wrap) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  flex-wrap: $wrap;
}

/*Center background-image*/
@mixin background-center {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

/*Flex grid for $cols amount of columns, $size used for media query break points*/
@mixin flex-grid($small, $med) {
  @media screen and (min-width: $small) {
    @for $i from 1 through $cols {
      .small_#{$i} {
        flex: $i;
      }
    }
  }
  @media screen and (min-width: $med) {
    @for $i from 1 through $cols {
      .med_#{$i} {
        flex: $i;
      }
    }
  }
}
